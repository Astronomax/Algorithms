int binpow(int a, int n, int mod) {
	int res = 1;
	while (n) {
		if (n & 1) {
			res = (res * a) % mod;
			--n;
		}
		else {
			a = (a * a) % mod;
			n >>= 1;
		}
	}
	return res;
}

bool is_prime(int n) {
	if (n == 0 || n == 1)
		return 0;
	if (n == 2)
		return 1;
	if (n % 2 == 0)
		return 0;
	int t = 0, u = n - 1;
	while (u % 2 == 0) {
		u /= 2;
		t++;
	}
	for (int i = 0; i < 20; i++) {
		int a = 1 + rand() % (n - 1);

		if (binpow(a, n - 1, n) != 1)
			return 0;

		int cur = binpow(a, u, n);
		if (cur == 1)
			continue;
		for (int j = 0; j < t; j++) {
			int temp = binpow(cur, 2, n);
			if (temp == 1) {
				if (cur != n - 1)
					return 0;
				break;
			}
			else cur = temp;
		}
	}
	return 1;
}
